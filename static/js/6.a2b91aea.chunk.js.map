{"version":3,"sources":["components/form_input/form_input.component.jsx","components/signin/signin.component.jsx","components/signup/signup.component.jsx","views/signin_signup/signin_signup.jsx"],"names":["FormInput","handleChange","label","otherProps","className","onChange","value","length","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setUserCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","signUpstart","signUpStart","displayName","confirmPassword","alert","SignInSignUpPage"],"mappings":"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","file":"static/js/6.a2b91aea.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./form_input.styles.scss\";\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n  <div className=\"group\">\n    <input\n      className=\"form-input\"\n      onChange={handleChange}\n      {...otherProps}\n    ></input>\n    {label ? (\n      <label\n        className={`${\n          otherProps.value.length ? \"shrink\" : \"\"\n        } form-input-label`}\n      >\n        {label}\n      </label>\n    ) : null}\n  </div>\n);\n\nexport default FormInput;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form_input/form_input.component\";\nimport CustomButton from \"../custom_button/custom_button.component\";\n\nimport \"./signin.styles.scss\";\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.actions\";\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = userCredentials;\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-in\">\n      <h2>I already have an account</h2>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          handleChange={handleChange}\n          value={email}\n          label=\"email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"password\"\n          required\n        />\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\"> Sign in </CustomButton>\n          {/* any buttons inside of a form element will cause the form to treat\n            the button as type=\"submit\" by default. We don't want that for our\n            google sign in button though, so just make sure to add type=\"button\"\n            to our google sign in CustomButton. */}\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign in with Google\n          </CustomButton>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form_input/form_input.component\";\nimport CustomButton from \"../custom_button/custom_button.component\";\n\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport \"./signup.styles.scss\";\n\nconst SignUp = ({ signUpstart }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n    signUpstart({ email, password, displayName });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-up\">\n      <h2 className=\"title\">I do not have a account</h2>\n      <span>Sign up with your email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpstart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n","import React from \"react\";\n\nimport \"./signin_signup.scss\";\nimport SignIn from \"../../components/signin/signin.component\";\nimport SignUp from \"../../components/signup/signup.component\";\n\nconst SignInSignUpPage = () => (\n  <div className=\"sign-in-and-sign-up\">\n    <SignIn />\n    <SignUp />\n  </div>\n);\n\nexport default SignInSignUpPage;\n"],"sourceRoot":""}