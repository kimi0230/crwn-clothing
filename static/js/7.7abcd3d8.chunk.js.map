{"version":3,"sources":["components/checkout_item/checkout_item.component.jsx","components/stripe_button/stripe_button.component.jsx","views/checkout/checkout.jsx"],"names":["connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","name","imageUrl","price","quantity","className","src","alt","onClick","StripeCheckoutButton","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","console","log","axios","url","process","REACT_APP_API_URL","method","data","then","response","alert","catch","error","stripeKey","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","id"],"mappings":"mOAyCeA,cAAQ,MANI,SAACC,GAAD,MAAe,CACxCC,UAAW,SAACC,GAAD,OAAUF,EAASG,YAAkBD,KAChDE,QAAS,SAACF,GAAD,OAAUF,EAASI,YAAQF,KACpCG,WAAY,SAACH,GAAD,OAAUF,EAASK,YAAWH,QAG7BH,EA/BM,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,UAAWG,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC5CE,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACE,sBAAKC,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKC,IAAKJ,EAAUK,IAAI,WAE1B,sBAAMF,UAAU,OAAhB,SAAwBJ,IACxB,uBAAMI,UAAU,WAAhB,UACE,qBAAKA,UAAU,QAAQG,QAAS,kBAAMT,EAAWC,IAAjD,oBAGA,sBAAMK,UAAU,QAAhB,SAAyBD,IACzB,qBAAKC,UAAU,QAAQG,QAAS,kBAAMV,EAAQE,IAA9C,uBAIF,sBAAMK,UAAU,QAAhB,SAAyBF,IACzB,qBAAKE,UAAU,gBAAgBG,QAAS,kBAAMb,EAAUK,IAAxD,0B,oCCkBSS,EA1Cc,SAAC,GAAe,IAAbN,EAAY,EAAZA,MACxBO,EAAyB,IAARP,EAyBvB,OACE,cAAC,IAAD,CACEQ,MAAM,UACNV,KAAK,qBACLW,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,yBAAoBZ,GAC/Ba,OAAQN,EACRO,WAAW,UACXC,MA/BY,SAACA,GACfC,QAAQC,IAAIF,GACZG,IAAM,CACJC,IAAKC,4nBAAYC,kBAAoB,aACrCC,OAAQ,OACRC,KAAM,CACJV,OAAQN,EACRQ,MAAOA,KAGRS,MAAK,SAACC,GACLC,MAAM,wBAEPC,OAAM,SAACC,GACNZ,QAAQC,IAAI,kBAAmBW,GAC/BF,MACE,gGAgBJG,UAnCmBT,iHCwCnBU,G,OAAkBC,YAAyB,CAC/CC,UAAWC,IACXC,MAAOC,OAGM7C,sBAAQwC,EAARxC,EAvCM,SAAC,GAAD,IAAG0C,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACnB,sBAAKhC,UAAU,gBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,+CAEF,qBAAKA,UAAU,eAAf,SACE,oDAEF,qBAAKA,UAAU,eAAf,SACE,8CAEF,qBAAKA,UAAU,eAAf,SACE,2CAEF,qBAAKA,UAAU,eAAf,SACE,+CAGH8B,EAAUI,KAAI,SAACvC,GAAD,OACb,cAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAASwC,OAE9B,qBAAKnC,UAAU,QAAf,SACE,4CAAegC,OAEjB,cAAC,EAAD,CAAsBlC,MAAOkC,IAC7B,sBAAKhC,UAAU,eAAf,8CAEE,uBAFF","file":"static/js/7.7abcd3d8.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  clearItemFromCart,\n  addItem,\n  removeItem,\n} from \"../../redux/cart/cart.actions\";\n\nimport \"./checkout_item.styles.scss\";\n\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n  return (\n    <div className=\"checkout-item\">\n      <div className=\"image-container\">\n        <img src={imageUrl} alt=\"item\"></img>\n      </div>\n      <span className=\"name\">{name}</span>\n      <span className=\"quantity\">\n        <div className=\"arrow\" onClick={() => removeItem(cartItem)}>\n          &#10094;\n        </div>\n        <span className=\"value\">{quantity}</span>\n        <div className=\"arrow\" onClick={() => addItem(cartItem)}>\n          &#10095;\n        </div>\n      </span>\n      <span className=\"price\">{price}</span>\n      <div className=\"remove-button\" onClick={() => clearItem(cartItem)}>\n        &#10005;\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearItem: (item) => dispatch(clearItemFromCart(item)),\n  addItem: (item) => dispatch(addItem(item)),\n  removeItem: (item) => dispatch(removeItem(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\n","import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey = process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY;\n\n  // callback\n  const onToken = (token) => {\n    console.log(token);\n    axios({\n      url: process.env.REACT_APP_API_URL + \"v1/payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token: token,\n      },\n    })\n      .then((response) => {\n        alert(\"succesful payment\");\n      })\n      .catch((error) => {\n        console.log(\"Payment Error: \", error);\n        alert(\n          \"There was an issue with your payment! Please make sure you use the provided credit card.\"\n        );\n      });\n  };\n\n  return (\n    <StripeCheckout\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      image=\"https://svgshare.com/i/CUz.svg\"\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  selectCartItems,\n  selectCartTotal,\n} from \"../../redux/cart/cart.selectors\";\nimport CheckoutItem from \"../../components/checkout_item/checkout_item.component\";\nimport StripeCheckoutButton from \"../../components/stripe_button/stripe_button.component\";\n\nimport \"./checkout.styles.scss\";\n\nconst CheckoutPage = ({ cartItems, total }) => (\n  <div className=\"checkout-page\">\n    <div className=\"checkout-header\">\n      <div className=\"header-block\">\n        <span>\bProduct</span>\n      </div>\n      <div className=\"header-block\">\n        <span>\bDescriptions</span>\n      </div>\n      <div className=\"header-block\">\n        <span>Quantity</span>\n      </div>\n      <div className=\"header-block\">\n        <span>Price</span>\n      </div>\n      <div className=\"header-block\">\n        <span>Remove</span>\n      </div>\n    </div>\n    {cartItems.map((cartItem) => (\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n    ))}\n    <div className=\"total\">\n      <span>TOTAL: ${total}</span>\n    </div>\n    <StripeCheckoutButton price={total} />\n    <div className=\"test-warning\">\n      * Test credit card for payments *\n      <br />\n      4242 4242 4242 4242 - EXP: 10/23 - CVV: 123\n    </div>\n  </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal,\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"],"sourceRoot":""}